{"version":3,"sources":["assets/avataaars.png","Components/Header.tsx","Components/StatCard.tsx","Components/About.tsx","Components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","src","avatar","alt","StatCard","data","mainInfo","minorInfo","renderCards","stats","cards","map","stat","i","About","useState","ghFollowers","setGhFollowers","randomStats","toString","useEffect","axios","get","then","res","followers","id","Footer","target","href","size","icon","faGithub","faLinkedin","particleOptions","App","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAAe,MAA0B,sC,OCY1BA,EATA,kBACb,yBAAQC,UAAU,aAAlB,UACE,qBAAKA,UAAU,SAASC,IAAKC,EAAQC,IAAI,mBACzC,oBAAIH,UAAU,gBAAd,2BACA,mBAAGA,UAAU,cAAb,2E,yBCEWI,EAPE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,sBAAKL,UAAU,YAAf,UACE,mBAAGA,UAAU,YAAb,SAA0BK,EAAKC,WAC/B,mBAAGN,UAAU,aAAb,SAA2BK,EAAKE,gBCD9BC,EAAc,SAACC,GACnB,IAAMC,EAAQD,EAAME,KAAI,SAACC,EAA+CC,GAAhD,OAAsD,cAAC,EAAD,CAAkBR,KAAMO,GAATC,MAC7F,OAAO,mCAAGH,KAuDGI,EApDD,WAAO,IAAD,EACoBC,mBAAS,GAD7B,mBACXC,EADW,KACEC,EADF,KAGZC,EAAc,CAClB,CACEZ,SAAU,MACVC,UAAW,oCAEb,CACED,SAAU,OACVC,UAAW,uBAEb,CACED,SAAUU,EAAYG,WACtBZ,UAAW,oBAEb,CACED,SAAU,QACVC,UAAW,8BAEb,CACED,SAAU,IACVC,UAAW,sBAUf,OANAa,qBAAU,WACRC,IAAMC,IAAI,wCAAwCC,MAAK,SAACC,GACtDP,EAAeO,EAAInB,KAAKoB,gBAEzB,IAGD,0BAASC,GAAG,QAAQ1B,UAAU,UAA9B,UACE,oBAAIA,UAAU,kBAAd,mBACA,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,kBAAf,SACE,oYAMF,oBAAIA,UAAU,kBAAd,0BACA,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,eAAf,SACGQ,EAAYU,S,gBC5CNS,EAPA,kBACb,mCACE,mBAAGC,OAAO,SAASC,KAAK,6BAAxB,SAAqD,cAAC,IAAD,CAAiBC,KAAK,KAAKC,KAAMC,QACtF,mBAAGJ,OAAO,SAASC,KAAK,uDAAxB,SAA+E,cAAC,IAAD,CAAiBC,KAAK,KAAKC,KAAME,YCA9GC,EAAkB,CACtB,UAAa,CACT,OAAU,CACN,MAAS,IACT,QAAW,CACP,QAAU,EACV,WAAc,OAGtB,YAAe,CACX,QAAU,EACV,QAAW,KAEf,KAAQ,CACJ,UAAa,QACb,MAAS,KAEb,KAAQ,CACJ,MAAS,GAEb,QAAW,CACP,KAAQ,CACJ,QAAU,EACV,MAAS,EACT,YAAe,MAI3B,cAAiB,CACb,OAAU,CACN,QAAW,CACP,QAAU,EACV,KAAQ,SAGhB,MAAS,CACL,KAAQ,CACJ,aAAgB,KAI5B,eAAiB,GAiBJC,EAdH,WACV,OACE,sBAAKnC,UAAU,MAAf,UACE,cAAC,IAAD,CAAWA,UAAU,YACnBoC,OAAQF,IAEV,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,cAAC,EAAD,QC9CSG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.71a21e06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avataaars.a3790103.png\";","import React from 'react';\nimport avatar from '../assets/avataaars.png';\n\nconst Header = () => (\n  <header className=\"App-header\">\n    <img className='avatar' src={avatar} alt='Profile Avatar' />\n    <h1 className='name-headline'>Preston Davis</h1>\n    <p className='quick-about'>Follower of Christ. Software Engineer. Coffee Enthusiast.</p>\n    {/* <div className='icon-scroll'></div> */}\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst StatCard = ({ data }: { data: { mainInfo: string, minorInfo: string } }) => (\n  <div className='stat-card'>\n    <p className='main-info'>{data.mainInfo}</p>\n    <p className='minor-info'>{data.minorInfo}</p>\n  </div>\n);\n\nexport default StatCard;","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport StatCard from './StatCard';\n\nconst renderCards = (stats: { mainInfo: string, minorInfo: string }[]) => {\n  const cards = stats.map((stat: { mainInfo: string, minorInfo: string }, i) => <StatCard key={i} data={stat} />);\n  return <>{cards}</>\n}\n\nconst About = () => {\n  const [ghFollowers, setGhFollowers] = useState(8);\n\n  const randomStats = [\n    {\n      mainInfo: '2.5',\n      minorInfo: 'Years of Professional Experience'\n    },\n    {\n      mainInfo: '2015',\n      minorInfo: 'Started Programming'\n    },\n    {\n      mainInfo: ghFollowers.toString(),\n      minorInfo: 'Github Followers'\n    },\n    {\n      mainInfo: 'React',\n      minorInfo: 'Favorite Framework/Library'\n    },\n    {\n      mainInfo: '6',\n      minorInfo: 'Countries Visited'\n    }\n  ];\n\n  useEffect(() => {\n    axios.get('https://api.github.com/users/premdav').then((res) => {\n      setGhFollowers(res.data.followers);\n    });\n  }, []);\n\n  return (\n    <section id='about' className='section'>\n      <h2 className='section-heading'>About</h2>\n      <div className='section-underline'></div>\n      <div className='section-content'>\n        <p>\n          Hey, I'm Preston! A software engineer, leading a team of 7, at Valcom, Inc. I work heavily in \n          React, React Native, Node, and Python to build web and mobile applications for internal use and also for our emergency notification platforms.\n          When I am not working, I enjoy building out side projects, hanging out with family, and I absolutely love to travel.\n        </p>\n      </div>\n      <h2 className='section-heading'>Random Stats</h2>\n      <div className='section-underline'></div>\n      <div className='card-section'>\n        {renderCards(randomStats)}\n      </div>\n    </section>\n)\n};\n\nexport default About;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\n\nconst Footer = (): JSX.Element => (\n  <footer>\n    <a target='_blank' href='https://github.com/premdav'><FontAwesomeIcon size='2x' icon={faGithub} /></a>\n    <a target='_blank' href='https://www.linkedin.com/in/preston-davis-016211139/'><FontAwesomeIcon size='2x' icon={faLinkedin} /></a>\n  </footer>\n)\n\nexport default Footer;","import React from 'react';\nimport Particles from 'react-particles-js';\nimport Header from './Components/Header';\nimport About from './Components/About';\nimport Projects from './Components/Projects';\nimport Footer from './Components/Footer';\n\nconst particleOptions = {\n  \"particles\": {\n      \"number\": {\n          \"value\": 100,\n          \"density\": {\n              \"enable\": true,\n              \"value_area\": 1500\n          }\n      },\n      \"line_linked\": {\n          \"enable\": true,\n          \"opacity\": 0.02\n      },\n      \"move\": {\n          \"direction\": \"right\",\n          \"speed\": 0.05\n      },\n      \"size\": {\n          \"value\": 1\n      },\n      \"opacity\": {\n          \"anim\": {\n              \"enable\": true,\n              \"speed\": 1,\n              \"opacity_min\": 0.1\n          }\n      }\n  },\n  \"interactivity\": {\n      \"events\": {\n          \"onclick\": {\n              \"enable\": true,\n              \"mode\": \"push\"\n          }\n      },\n      \"modes\": {\n          \"push\": {\n              \"particles_nb\": 1\n          }\n      }\n  },\n  \"retina_detect\": true\n}\n\nconst App = (): JSX.Element => {\n  return (\n    <div className=\"App\">\n      <Particles className='particles'\n        params={particleOptions as any}\n      />\n      <Header />\n      <About />\n      {/* <Projects /> */}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Stylesheets/Main.sass';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}